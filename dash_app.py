import streamlit as st
import pandas as pd
import plotly.express as px
from dataclasses import dataclass

# --- –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
@dataclass
class UserInput:
    month: str  # "01".."12"
    area: float  # –ø–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã (–º¬≤)
    adults: int
    children: int
    is_privileged: bool  # –ª—å–≥–æ—Ç–∞ (–¥–∞/–Ω–µ—Ç)
    house_age_category: str  # "new" | "medium" | "old"
    has_elevator: bool


# --- –¢–∞—Ä–∏—Ñ—ã –¥–ª—è –ú–∏–Ω—Å–∫–∞ (2025) ---
TARIFFS = {
    # –∏—Å—Ç–æ—á–Ω–∏–∫: https://economy.gov.by/ru/inform_vop-ru/
    "heating_Gcal": 24.72,       # BYN/–ì–∫–∞–ª (—Å—É–±—Å–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
    "heating_Gcal_full": 134.94, # —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π

    # –∏—Å—Ç–æ—á–Ω–∏–∫: https://www.energosbyt.by/ru/info-potrebitelyam/fiz-l/tarify
    "electricity_kWh": 0.2412,   # BYN/–∫–í—Ç¬∑—á (–æ–¥–Ω–æ—Å—Ç–∞–≤–æ—á–Ω—ã–π)

    # –∏—Å—Ç–æ—á–Ω–∏–∫: https://minskvodokanal.by/person/tariffs/
    "water_m3": 1.5216,          # BYN/–º¬≥
    "sewage_m3": 1.6267,         # BYN/–º¬≥

    # –ñ–ö–• —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
    "waste_per_person": 3.35,    # BYN/—á–µ–ª (–ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤—É –¢–ö–û)
    "maintenance_m2": 0.1932,    # BYN/–º¬≤
    "capital_repair_m2": 0.2536, # BYN/–º¬≤
    "lift_m2": 0.0902,           # BYN/–º¬≤
    "lighting_m2": 0.0366,       # BYN/–º¬≤
}

HEATING_MONTHS = ["11", "12", "01", "02", "03"]

HOUSE_COEFS = {
    "new": {"heating": 1.0, "electricity": 1.0},
    "medium": {"heating": 1.05, "electricity": 1.05},
    "old": {"heating": 1.1, "electricity": 1.05},
}

REALISM_UPLIFT = 1.07  # +7% –¥–ª—è "—Å—Ä–µ–¥–Ω–µ–≥–æ —Å–æ—Å–µ–¥–∞"


# --- –†–∞—Å—á—ë—Ç ---
def calculate_costs(user: UserInput):
    people = user.adults + user.children
    area = user.area

    # –æ—Ç–æ–ø–ª–µ–Ω–∏–µ (–æ—á–µ–Ω—å —É–ø—Ä–æ—â—ë–Ω–Ω–æ: —Å—á–∏—Ç–∞–µ–º 0.018 –ì–∫–∞–ª –Ω–∞ 1 –º¬≤ –≤ –º–µ—Å—è—Ü –æ—Ç–æ–ø–ª–µ–Ω–∏—è)
    heating = 0
    if user.month in HEATING_MONTHS:
        gcal = area * 0.018
        tariff = TARIFFS["heating_Gcal_full"]
        if user.is_privileged:
            tariff = TARIFFS["heating_Gcal"]
        heating = gcal * tariff

    # —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—è (–Ω–æ—Ä–º–∞—Ç–∏–≤: 150 –∫–í—Ç¬∑—á –Ω–∞ —Å–µ–º—å—é + 50 –Ω–∞ –∫–∞–∂–¥–æ–≥–æ –¥–æ–ø.—á–µ–ª)
    base_kWh = 150 + (people - 1) * 50
    electricity = base_kWh * TARIFFS["electricity_kWh"]

    # –≤–æ–¥–∞ –∏ –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è (–ø–æ 3 –º¬≥ –Ω–∞ —á–µ–ª)
    water = people * 3 * TARIFFS["water_m3"]
    sewage = people * 3 * TARIFFS["sewage_m3"]

    # –¢–ö–û
    waste = people * TARIFFS["waste_per_person"]

    # –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
    maintenance = area * TARIFFS["maintenance_m2"]
    cap_repair = area * TARIFFS["capital_repair_m2"]
    lift = area * TARIFFS["lift_m2"] if user.has_elevator else 0
    lighting = area * TARIFFS["lighting_m2"]

    normative = heating + electricity + water + sewage + waste + maintenance + cap_repair + lift + lighting

    # --- –°—Ä–µ–¥–Ω–∏–π —Å–æ—Å–µ–¥ ---
    coefs = HOUSE_COEFS[user.house_age_category]
    heating_corr = heating * coefs["heating"]
    electricity_corr = electricity * coefs["electricity"]

    neighbor = (
        heating_corr + electricity_corr + water + sewage + waste + maintenance + cap_repair + lift + lighting
    ) * REALISM_UPLIFT

    return {"normative": round(normative, 2), "neighbor": round(neighbor, 2)}


# --- Streamlit –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ---
st.title("üè† –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π ‚Äî –ú–∏–Ω—Å–∫")

col1, col2 = st.columns(2)
with col1:
    month = st.selectbox("–ú–µ—Å—è—Ü", [f"{i:02}" for i in range(1, 13)])
    area = st.number_input("–ü–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã (–º¬≤)", 20, 200, 60)
    adults = st.number_input("–í–∑—Ä–æ—Å–ª—ã–µ", 1, 6, 2)
    children = st.number_input("–î–µ—Ç–∏", 0, 5, 1)
with col2:
    is_privileged = st.checkbox("–õ—å–≥–æ—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ")
    house_age_category = st.selectbox("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–º–∞", ["new", "medium", "old"])
    has_elevator = st.checkbox("–õ–∏—Ñ—Ç –≤ –¥–æ–º–µ", value=True)

user = UserInput(
    month=month,
    area=area,
    adults=adults,
    children=children,
    is_privileged=is_privileged,
    house_age_category=house_age_category,
    has_elevator=has_elevator,
)

calc = calculate_costs(user)

# --- –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
st.subheader("üìä –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —Ä–µ–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã")
real_electricity = st.number_input("–≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—è (BYN)", 0.0, 500.0, 50.0)
real_water = st.number_input("–í–æ–¥–∞ (BYN)", 0.0, 300.0, 20.0)
real_heating = st.number_input("–û—Ç–æ–ø–ª–µ–Ω–∏–µ (BYN)", 0.0, 500.0, 80.0)
real_sewage = st.number_input("–ö–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è (BYN)", 0.0, 300.0, 15.0)
real_fixed = st.number_input("–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ (BYN)", 0.0, 200.0, 30.0)

real_total = real_electricity + real_water + real_heating + real_sewage + real_fixed

# --- –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è ---
df = pd.DataFrame(
    {
        "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": ["–ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç", "–í–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã", "–°—Ä–µ–¥–Ω–∏–π —Å–æ—Å–µ–¥"],
        "–°—É–º–º–∞ (BYN)": [calc["normative"], real_total, calc["neighbor"]],
    }
)

fig = px.bar(df, x="–ö–∞—Ç–µ–≥–æ—Ä–∏—è", y="–°—É–º–º–∞ (BYN)", color="–ö–∞—Ç–µ–≥–æ—Ä–∏—è", text="–°—É–º–º–∞ (BYN)")
fig.update_traces(textposition="outside")

st.plotly_chart(fig, use_container_width=True)
